/* gbx.js v2020-10-11 - https://github.com/ThaumicTom/gbx.js */
var gbx,version,format,refTableCompression,bodyCompression,unknown,classID,userDataSize,userData,numHeaderChunks,buffer,headerChunks=[],metadata=[],lookbackVersion=null,lookbackStrings=[],collectionIDs={6:"Stadium",11:"Valley",12:"Canyon",13:"Lagoon",25:"Stadium256",26:"StadiumÂ®",10003:"Common"};function readGbx(e){if(buffer=e,lookbackVersion=null,lookbackStrings=[],"GBX"==(gbx=readString(3))&&(version=readInt16())>=3)if(format=readChar(),refTableCompression=readChar(),bodyCompression=readChar(),version>=4&&(unknown=readChar()),classID=readInt32(),version>=6){for(userDataSize=readInt32(),numHeaderChunks=readInt32(),a=0;a<numHeaderChunks;a++){var r=4095&readInt32(),t=readInt32(),n=0!=(t&1<<31);headerChunks[r]={size:2147483647&t,isHeavy:n}}for(var d in headerChunks)headerChunks[d].data=readBytes(headerChunks[d].size),delete headerChunks[d].size;if(50606080==classID){changeBuffer(headerChunks[2].data);var o=readByte();o<3&&(metadata.mapInfo=readMeta(),metadata.mapName=readString()),readInt32(),o>=1&&(metadata.bronzeTime=readInt32(),metadata.silverTime=readInt32(),metadata.goldTime=readInt32(),metadata.authorTime=readInt32(),2==o&&readByte(),o>=4&&(metadata.cost=readInt32(),o>=5&&(metadata.isMultilap=readBool(),6==o&&readBool(),o>=7&&(metadata.trackType=readInt32(),o>=9&&(readInt32(),o>=10&&(metadata.authorScore=readInt32(),o>=11&&(metadata.editorMode=readInt32(),o>=12&&(readBool(),o>=13&&(metadata.nbCheckpoints=readInt32(),metadata.nbLaps=readInt32()))))))))),changeBuffer(headerChunks[3].data);var i=readByte();metadata.mapInfo=readMeta(),metadata.mapName=readString(),6==readByte()&&console.error("[gbx.js] Unvalidated map."),i>=1&&(metadata.locked=readBool(),metadata.password=readString(),i>=2&&(metadata.decoration=readMeta(),i>=3&&(metadata.mapOrigin=readVec2(),i>=4&&(metadata.mapTarget=readVec2(),i>=5&&(readInt64(),readInt64(),i>=6&&(metadata.mapType=readString(),metadata.mapStyle=readString(),i<=8&&readBool(),i>=8&&(metadata.lightmapCacheUID=toBase64(readBytes(8)),i>=9&&(metadata.lightmapVersion=readByte(),i>=11&&(metadata.titleUID=readLookbackString()))))))))),changeBuffer(headerChunks[5].data),metadata.xml=readString(),changeBuffer(headerChunks[7].data),0!=readInt32()&&(metadata.thumbnailSize=readInt32(),readString("<Thumbnail.jpg>".length),0==metadata.thumbnailSize?(metadata.thumbnail=null,console.warn("[gbx.js] No thumbnail.")):metadata.thumbnail=readBytes(metadata.thumbnailSizethumbSize),readString("</Thumbnail.jpg>".length),readString("<Comments>".length),metadata.comments=readString(),readString("</Comments>".length)),changeBuffer(headerChunks[8].data);readInt32();metadata.authorVersion=readInt32(),metadata.authorLogin=readString(),metadata.authorNickname=readString(),metadata.authorZone=readString(),metadata.authorExtraInfo=readString(),metadata.mapNameD=deformat(metadata.mapName)}}else console.error("[gbx.js] Error parsing: Not a map file.")}var pointer=0,previousPointerPos=0,utf8decoder=new TextDecoder;function changeBuffer(a){buffer=a,previousPointerPos=pointer,pointer=0}function peekByte(){return buffer[pointer]}function peekBytes(a){var e=new Uint8Array(a);for(i=0;i<a;i++)e[i]=buffer[pointer+i];return e}function readByte(){var a=peekByte();return pointer+=1,a}function readBytes(a){var e=new Uint8Array(a);for(i=0;i<a;i++)e[i]=readByte();return e}function readInt16(){var a=readBytes(2);return a[0]|a[1]<<8}function readInt32(){var a=readBytes(4);return a[0]|a[1]<<8|a[2]<<16|a[3]<<24}function readInt64(){var a=readBytes(8);return a[0]|a[1]<<8|a[2]<<16|a[3]<<24|a[4]<<32|a[5]<<40|a[6]<<48|a[7]<<56}function readString(a){return null==a&&(a=readInt32()),utf8decoder.decode(readBytes(a))}function readChar(){return readString(1)}function readLookbackString(){null==lookbackVersion&&(lookbackVersion=readInt32());var a=new Uint32Array([readInt32()])[0];if(0==(16383&a)&&(a>>30==1||a>>30==-2)){var e=readString();return lookbackStrings.push(e),e}if(16383!=(16383&a))return a>>30==0?null==collectionIDs[a]?(console.warn("[gbx.js] Unknown index: "+a),a):collectionIDs[a]:lookbackStrings.Count>(16383&a)-1?lookbackStrings[(16383&a)-1]:"";switch(a>>30){case 2:return"Unassigned";case 3:return"";default:console.error("[gbx.js] Error parsing: Unknown lookback error.")}}function readMeta(){return{id:readLookbackString(),collection:readLookbackString(),author:readLookbackString()}}function readBool(){return!!readInt32()}function readFloat(){return readInt32().toFixed(2)}function readVec2(){return{x:readFloat(),y:readFloat()}}function readVec3(){return{x:readFloat(),y:readFloat(),z:readFloat()}}function toHex(a){return a.toString(16)}function toBase64(a){return btoa([].reduce.call(new Uint8Array(a),function(a,e){return a+String.fromCharCode(e)},""))}function deformat(a){return(a=a.replace(/\$\$/g,"$\\")).replace(/\$([a-f0-9]){3}|\$([a-f0-9]){1,2}(?=[^a-f0-9])|\$([lh]\[.*?\]|[g-il-ostwz])|\\/gi,"")}
